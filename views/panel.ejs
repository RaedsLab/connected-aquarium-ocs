<!-- Your Page Content Here -->
<div class="row">
  <!--TANK LISt-->

  <div class="col-md-6">
    <div style="min-height: 390px;" class="box">
      <div class="box-header with-border">
        <h3 class="box-title">My Aquariums</h3>
        <div class="box-tools pull-right">
          <button class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse"><i
              class="fa fa-minus"></i></button>
        </div>
      </div>
      <div class="box-body">
        <div id="tankMsg"></div>
        <div class="table-responsive">
          <table class="table no-margin">
            <thead>
            <tr>
              <th>Code</th>
              <th>Label</th>
              <th>Status</th>
              <th>Delete</th>
            </tr>
            </thead>
            <tbody id="tankList">
            <!--- TANK  LOOP -->
            <!--- TANK  LOOP -->
            </tbody>
          </table>
        </div>

      </div><!-- /.box-body -->
      <div class="box-footer">
        <a id="addModal" class="btn btn-app" data-toggle="modal" data-target="#addTankModal">
          <i class="fa fa-edit"></i> Add
        </a>
        <a class="btn btn-app">
          <i class="fa fa-repeat"></i> Refresh
        </a>
      </div><!-- /.box-footer-->
    </div>
  </div>

  <!-- MAP  -->
  <div class="col-md-6">
    <!-- MAP HERE -->
    <div class="box box-success">
      <div class="box-header with-border">
        <h3 class="box-title">My Fish | Map</h3>
        <div class="box-tools pull-right">
          <button class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
        </div>
      </div><!-- /.box-header -->
      <div class="box-body no-padding">
        <div class="pad">
          <!-- Map will be created here -->
          <div id="world-map-markers" style="height: 325px;">
          </div>
        </div>
      </div><!-- /.box-body -->
    </div>
  </div>
</div>
<!-- MODAL ADD TANK -->
<%- partial('./partials/panel/addTankModal.ejs') %>


<div class="row">
  <!-- FishList  -->
  <div class="col-md-6">


    <div id="boxFish" class="box collapsed-box">
      <div class="box-header with-border">
        <h3 class="box-title">My Fish | <span id="tankNameSelect"></span></h3>
        <div class="box-tools pull-right">
          <button class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse"><i
              class="fa fa-minus"></i></button>
        </div>
      </div>

      <div class="box-body">
        <div class="table-responsive">
          <table class="table no-margin">
            <thead>
            <tr>
              <th>Name</th>
              <th>Native</th>
              <th>Delete</th>
            </tr>
            </thead>
            <tbody id="fishList">

            </tbody>
          </table>
        </div>
      </div><!-- /.box-body -->
      <div class="box-footer">
        <div class="row">
          <div class="col-md-6">
            <a class="btn btn-app" data-toggle="modal" data-target="#addTankModal">
              <i class="fa fa-edit"></i> Add
            </a>
          </div>
          <div class="col-md-6">

          </div>
        </div>

      </div><!-- /.box-footer-->
    </div>


  </div>

  <div class="col-md-6">

    <div id="aquariumData" class="box collapsed-box">
      <div class="box-header with-border">
        <h3 id="tankNameDataBox" class="box-title">AQUARIUM_NAME</h3>
        <div class="box-tools pull-right">
          <button class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip" title="Collapse"><i
              class="fa fa-minus"></i></button>
        </div>
      </div>

      <div class="box-body">
        <div class="col-md-6">
          <p>Current local temperature</p>
          <!--- TEMPERATURE courrante -->
          <input type="text"
                 data-readOnly=true
                 data-width="120"
                 value="0"
                 class="dialTemp"
                 data-fgColor="#F56954"
                 data-skin="tron"
                 data-max=70
                 data-angleOffset=-125
                 data-angleArc=250
          >
        </div>
      </div><!-- /.box-body -->
    </div>

  </div>


</div>


<script>
  /**
   * Logged user
   * */
  var user = null;

  /**
   Get URL Params
   */
  var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
      sURLVariables = sPageURL.split('&'),
      sParameterName,
      i;

    for (i = 0; i < sURLVariables.length; i++) {
      sParameterName = sURLVariables[i].split('=');

      if (sParameterName[0] === sParam) {
        return sParameterName[1] === undefined ? true : sParameterName[1];
      }
    }
  };

  var userId = getUrlParameter('id');

  /**
   *
   * Deletes userId cookie
   * Redirects to login page
   */
  function logout() {
    $.removeCookie("userId");
    /// redirect to login
    window.location.replace("/");
  }

  /**
   * Check if cookie exists
   * if exists check with URL param ID
   */
  $(document).ready(function () {

    /*** HIDE */
    $('#boxFish').hide();
    $('#aquariumData').hide();

    var loginCookie = $.cookie("userId");
    if (loginCookie != undefined) {
      if (loginCookie != userId) {
        // redirect to proper panel
        window.location.replace("/panel?id=" + loginCookie);
      } else {
        /// ALL is good
        /**
         Check if id is present
         if not redirect to login
         */

        if (userId == undefined) {
          /// redirect to login
          window.location.replace("/");

        } else {
          user = getUserById(userId);
          if (user == undefined) {
            window.location.replace("/");
          }
        }
        /**
         * Set the panel elements
         */
          //$('#userEmail').html(user.email);
        $(".userEmailDisplay").html(user.email);


        var mapInitOnce = false;
        $('#addTankModal').on('shown.bs.modal', function (e) {
          // do something...
          /**
           * INIT MAP Singleton
           * */
          if (!mapInitOnce) {
            init();
            mapInitOnce = true;
          }
        });
        /**
         * Update user tank list
         * */
        getAllUserTanks();
        /// \ALL is good
      }
    } else {
      // redirect to login
      window.location.replace("/");
    }
  });


  /**
   * Get user by id
   */
  function getUserById(id) {
    var user = $.ajax({
      url: "/user/" + id,
      async: false,
      dataType: 'json',
      success: function (data) {
        return data;
      }
    });
    return user['responseJSON'];
  }


  /**
   * Get all user tanks
   * */
  function getAllUserTanks() {

    var tankMapPoints = new Array();

    $("#tankList").html("");
    $("#tankMsg").html("");

    user = getUserById(userId);
    if (user.tanks.length == 0) {
      $("#tankMsg").html("You don't have any configured fish-tanks.")
    } else {
      user.tanks.forEach(function (entry) {

          /**
           * SET MAP points
           * */
          var tmpCountryName = getCountryByLatLon(entry.latitude, entry.longitude);

          var tmpPoint = {
            latLng: [entry.latitude, entry.longitude],
            name: tmpCountryName
          };

          tankMapPoints.push(tmpPoint); // push to array

          var statecolorClass;
          switch (entry.state) {
            case "online":
              statecolorClass = "label-success";
              break;
            case "offline":
              statecolorClass = "label-danger";
              break;
            default:
              statecolorClass = "label-warning";
          }
          var tankRow = "<tr><td onclick='updateFishList(this)' class='tank' id='" + entry.id + "' id='ankCode'><a>" + entry.code + "</a></td><td>" + entry.label + "</td><td><span class='label " + statecolorClass + "'>" + entry.state + "</span></td><td>";
          tankRow += "<a onclick='deleteFishTank(this)' id='" + entry.id + "' class='btn btn-xs btn-danger btn-flat deleteTank'>Delete</a></td></tr>";

          $("#tankList").append(tankRow);
        }
      );
    }
    initMap(tankMapPoints);
  }

  /**
   * Get all fish by tank ID
   * */
  function getFishByTank(idTank) {
    $("#fishList").html(""); // empty the list

    var xhrTankResp = $.ajax({
      url: "/tank/" + idTank,
      async: false,
      dataType: 'json',
      success: function (data) {
        return data;
      }
    });
    var tank = xhrTankResp['responseJSON'];

    $("#tankNameSelect").html(tank.label);
    $("#tankNameDataBox").html(tank.label);

    /*********/

    /**
     *
     * SET DATA BOX VALUES
     * */

    $(".dialTemp").knob();
    $(".dialTemp").val(30);


    /*********/


    if (tank.fishInside != undefined) {
      tank.fishInside.forEach(function (fish) {
        var fishListString = "<tr><td class='fishInTank' >" + fish.name + "</td><td><span class='label label-warning'>Pending</span></td>";
        fishListString += "<td><a id='" + fish.id + "' class='btn btn-xs btn-danger btn-flat'>Remove</a></td></tr>";

        $("#fishList").append(fishListString);
      });

    } else {
      $("#fishList").html("You don't have any fish yet.");
    }


    /**
     * REVEALE the 2 Boxes */
    $('#boxFish').show();
    $('#aquariumData').show();
    $('#boxFish').removeClass('collapsed-box');
    $('#aquariumData').removeClass('collapsed-box');

  }


  /**
   * On tank click => get list of fish
   */
  function updateFishList(param) {
    var tankId = param.getAttribute("id");
    getFishByTank(tankId);
  }
  /**
   * On tank click => delete tank
   */
  function deleteFishTank(param) {
    var tankId = param.getAttribute("id");
    $.ajax({
      url: '/tank/' + tankId,
      type: 'DELETE',
      success: function (result) {
        getAllUserTanks();
        $("#fishList").html(""); // empty the fish list
      }
    });
  }

  /**
   *
   * Add a tank form JS
   * */
  function addATank() {
    $("#tankMsg").html("");

    var code = $("#tankCode").val();
    var label = $("#tankLabel").val();
    var latitude = $("#tankLatitude").val();
    var longitude = $("#tankLongitude").val();

    $.post("tank", {code: code, label: label, latitude: latitude, longitude: longitude, owner: userId, sate: 'pending'})
      .done(function (data) {
        /**
         * Update user tank list
         * */
        $("#tankList").append("<li class='tank' id='" + data.id + "'>" + data.label + " [" + data.state + "]</li>");

      });
  }


  /**
   * INIT MAP
   * @param : [] of {latLng: [43.73, 7.41], name: 'Monaco'},
   */
  function initMap(points) {
    $('#world-map-markers').vectorMap({
      map: 'world_mill_en',
      scaleColors: ['#C8EEFF', '#0071A4'],
      normalizeFunction: 'polynomial',
      hoverOpacity: 0.7,
      hoverColor: false,
      markerStyle: {
        initial: {
          fill: '#F8E23B',
          stroke: '#383f47'
        }
      },
      backgroundColor: '#383f47',
      markers: points
    });
  }


  /**
   * Get country by lat,lon
   */
  function getCountryByLatLon(lat, lon) {
    var countryResp = $.ajax({
      url: "http://ws.geonames.org/countryCode?lat=" + lat + "&lng=" + lon + "&username=aquaocs&type=JSON",
      async: false,
      dataType: 'json',
      success: function (data) {
        return data;
      }
    });
    var ctrName = JSON.parse(countryResp.responseText);
    return ctrName.countryName;
  }

</script>
